apply plugin: "base"

version = System.getProperty("groovy.version") ?: "1.7.8"

archivesBaseName = "groovy-docs"

checkOutDir = "${buildDir.path}/checkout"
outputDir = "${buildDir.path}/docs"

explicitGroovyHome = System.getProperty("groovy.home")
groovyHome = explicitGroovyHome ? file(explicitGroovyHome).absolutePath : "$checkOutDir/grails-src"

configurations {
    publish
}

repositories {
    mavenCentral()
    mavenRepo urls: "http://download.java.net/maven/2/"
    mavenRepo urls: "http://snapshots.repository.codehaus.org/"
}

dependencies {
    // Required while picking up grails-docs from dist dir.
    publish "org.grails:grails-docs:1.4.0.BUILD-SNAPSHOT"

    publish "org.slf4j:slf4j-log4j12:1.5.8",
            "org.xhtmlrenderer:core-renderer:R8"
}

task publishGuide {
    sourceDir = projectDir.path + "/src"
    targetDir = outputDir
    workDir = buildDir

    doLast {
        // Create a class loader for the publication stuff.
        def classpath = project.configurations.publish
        classpath = classpath.files.collect { it.toURI().toURL() }

        project.publishClassLoader = new URLClassLoader(classpath as URL[], Thread.currentThread().contextClassLoader)

        def props = new Properties()
        new File("${projectDir}/resources/doc.properties").withInputStream {input ->
            props.load(input)
        }

        def publisher = publishClassLoader.loadClass("grails.doc.DocPublisher").newInstance(file(sourceDir), file(targetDir))
        publisher.ant = ant
        publisher.workDir = workDir
        publisher.images = file("${projectDir}/resources/img")
        publisher.css = file("${projectDir}/resources/css")
        publisher.js = file("${projectDir}/resources/js")
        publisher.style = file("${projectDir}/resources/style")
        publisher.title = props.title
        publisher.version = props."groovy.version"
        publisher.authors = props.authors
        publisher.copyright = props.copyright
        publisher.footer = props.footer
        publisher.logo = '<a href="http://groovy.codehaus.org" target="_blank"><img alt="Groovy Logo" title="The Groovy Language" src="${path}/img/groovy.png" border="0"/></a>'
        publisher.sponsorLogo = '<a href="http://springsource.com" target="_blank"><img alt="SpringSource Logo" title="SpringSource - Weapons for the War on Java Complexity" src="${path}/img/springsource-logo.png" border="0"/></a>'
        publisher.engineProperties = props
        
        // Radeox loads its bundles off the context class loader, which
        // unfortunately doesn't contain the grails-docs JAR. So, we
        // temporarily switch the DocPublisher class loader into the
        // thread so that the Radeox bundles can be found.
        def oldClassLoader = Thread.currentThread().contextClassLoader
        Thread.currentThread().contextClassLoader = publisher.getClass().classLoader

        publisher.publish()

        // Restore the old context class loader.
        Thread.currentThread().contextClassLoader = oldClassLoader
    }
}

task publishPdf(dependsOn: ['publishGuide']) << {
    publishClassLoader.loadClass("grails.doc.PdfBuilder").build(outputDir, project.groovyHome)
}

task docs(dependsOn: ['publishPdf'])

task dist(type: Zip, dependsOn: 'docs') {
    from outputDir
}

artifacts {
    archives dist
}

task wrapper(type: Wrapper) {
    gradleVersion = '0.9.2'
}

